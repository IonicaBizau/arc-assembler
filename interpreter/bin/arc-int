#!/usr/bin/env node

// Dependencies
var Fs = require("fs")
  , Path = require("path")
  , ArcInterpreter = require("../lib")
  ;

// Constants
const INPUT_FILE = Path.resolve(process.cwd() + "/" + process.argv[2])
    , HELP = "Usage: arc-int <path/to/binary/file> [options]"
         + "\n"
         + "\nOptions:"
         + "\n  -h, --help                          Displays this help."
         + "\n  -v                                  Displays verbose output."
         + "\n  -r                                  Displays the final state of the registers."
         + "\nDocumentation can be found at https://github.com/IonicaBizau/arc-assembler"
    ;

if (~process.argv.indexOf("-h") || ~process.argv.indexOf("-h") || !process.argv[2]) {
    console.log(HELP);
    process.exit(1);
}

// Read the input file
Fs.readFile(INPUT_FILE, function (err, buff) {
    if (err) { throw err; }

    // Remove the env things
    buff = buff.slice(22);

    var result = ArcInterpreter.interpret(buff);

    if (process.argv[3] === "-v") {
        console.log(result);
    }

    if ((process.argv[4] || process.argv[3]) === "-r") {
        // Interpret
        console.log("--------------");
        console.log("Registers: ");
        var reg = {};
        Object.keys(ArcInterpreter.r).forEach(function (c, i) {
            reg[ArcInterpreter.registerMap[c]] = ArcInterpreter.r[c];
        });
        console.log(JSON.stringify(reg, null, 4));
    }
});

