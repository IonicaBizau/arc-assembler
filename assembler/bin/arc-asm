#!/usr/bin/env node

// Dependencies
var Fs = require("fs")
  , ArcAssembler = require("../lib")
  , Argv = require("yargs")
     .alias("s", "source")
     .alias("o", "output")
     .argv
  , Path = require("path")
  ;

// Constants
const INPUT_FILE = Path.resolve(process.cwd() + "/" + Argv.source)
    , OUTPUT_FILE = Path.resolve(process.cwd() + "/" + Argv.output)
    , HELP = "Usage: arc-asm [options]"
         + "\n"
         + "\nOptions:"
         + "\n  -h, --help                          Displays this help."
         + "\n  -s, --source <path/to/source/file>  Sets the source file path."
         + "\n  -o, --output <path/to/output/file>  Sets the output file path"
         + "\n"
         + "\nDocumentation can be found at https://github.com/IonicaBizau/arc-assembler"
    ;

// Invalid data
if (!Argv.source || !Argv.output) {
    console.log(HELP);
    process.exit(1);
}

// Create the write stream
var outputStream = Fs.createWriteStream(OUTPUT_FILE);

// Read the input file content
Fs.readFile(INPUT_FILE, "utf-8", function (err, content) {
    if (err) throw err;

    // Compile the input
    var result = ArcAssembler.compile(content);

    // Show some output
    result.raw.forEach(function (c) {
        console.log(c.code.match(/.{1,4}/g).join(" ") + " << Line " + c.line);
    });

    // Write things in the output stream
    outputStream.write("#!/usr/bin/env arc-int");
    outputStream.write(new Buffer(result.mCode));
    outputStream.end();

    // Make the file executable
    Fs.chmodSync(OUTPUT_FILE, 0755);
});
